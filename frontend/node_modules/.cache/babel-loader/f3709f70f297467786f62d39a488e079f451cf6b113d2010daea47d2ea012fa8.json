{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 Vue,React,Express,SQL \\u043E\\u0442 26.10.2022\\\\frontend\\\\src\\\\components\\\\NodeChart.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { CurrentNodeMetrics } from \"../contexts/CurrentNodeInfo\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { CurrentNodeInfo } from \"../contexts/CurrentNodeInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Chart() {\n  _s();\n  const metrics = React.useContext(CurrentNodeMetrics);\n  ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Line Chart'\n      }\n    }\n  };\n  console.log(metrics);\n  if (metrics) {\n    const labels = [];\n    for (const met in metrics) {\n      labels.push(met.datetime);\n    }\n    const data = {\n      labels,\n      datasets: [{\n        label: 'CPU',\n        data: [1, 2, 3, 4, 5, 6],\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)'\n      }, {\n        label: 'RAM',\n        data: labels,\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)'\n      }, {\n        label: 'DISK',\n        data: labels,\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)'\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this);\n  }\n}\n_s(Chart, \"UEpGlbEfRacf5VJn/msLHoe12TA=\");\n_c = Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","CurrentNodeMetrics","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","CurrentNodeInfo","jsxDEV","_jsxDEV","_s","metrics","useContext","register","options","responsive","plugins","legend","position","title","display","text","console","log","labels","met","push","datetime","data","datasets","label","borderColor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Тестовое задание Vue,React,Express,SQL от 26.10.2022/frontend/src/components/NodeChart.jsx"],"sourcesContent":["import React from 'react';\r\nimport { CurrentNodeMetrics } from \"../contexts/CurrentNodeInfo\"\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {CurrentNodeInfo} from \"../contexts/CurrentNodeInfo\";\r\n\r\n\r\n\r\nexport function Chart() {\r\n    const metrics = React.useContext(CurrentNodeMetrics);\r\n    ChartJS.register(\r\n        CategoryScale,\r\n        LinearScale,\r\n        PointElement,\r\n        LineElement,\r\n        Title,\r\n        Tooltip,\r\n        Legend\r\n    );\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                position: 'top',\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Chart.js Line Chart',\r\n            },\r\n        },\r\n    };\r\n    console.log(metrics)\r\n    if (metrics) {\r\n\r\n        const labels = [];\r\n        for (const met in metrics) {\r\n            labels.push(met.datetime)\r\n        }\r\n\r\n        const data = {\r\n            labels,\r\n            datasets: [\r\n                {\r\n                    label: 'CPU',\r\n                    data: [1, 2, 3, 4, 5, 6],\r\n                    borderColor: 'rgb(255, 99, 132)',\r\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n                },\r\n                {\r\n                    label: 'RAM',\r\n                    data: labels,\r\n                    borderColor: 'rgb(53, 162, 235)',\r\n                    backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n                },\r\n                {\r\n                    label: 'DISK',\r\n                    data: labels,\r\n                    borderColor: 'rgb(53, 162, 235)',\r\n                    backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n                },\r\n            ],\r\n        };\r\n        return <Line options={options} data={data} />;\r\n    }\r\n\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAAQC,eAAe,QAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI5D,OAAO,SAASZ,KAAKA,CAAA,EAAG;EAAAa,EAAA;EACpB,MAAMC,OAAO,GAAGhB,KAAK,CAACiB,UAAU,CAAChB,kBAAkB,CAAC;EACpDE,OAAO,CAACe,QAAQ,CACZd,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACJ,CAAC;EAED,MAAMS,OAAO,GAAG;IACZC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,QAAQ,EAAE;MACd,CAAC;MACDC,KAAK,EAAE;QACHC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EACDC,OAAO,CAACC,GAAG,CAACZ,OAAO,CAAC;EACpB,IAAIA,OAAO,EAAE;IAET,MAAMa,MAAM,GAAG,EAAE;IACjB,KAAK,MAAMC,GAAG,IAAId,OAAO,EAAE;MACvBa,MAAM,CAACE,IAAI,CAACD,GAAG,CAACE,QAAQ,CAAC;IAC7B;IAEA,MAAMC,IAAI,GAAG;MACTJ,MAAM;MACNK,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,KAAK;QACZF,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACxBG,WAAW,EAAE,mBAAmB;QAChCC,eAAe,EAAE;MACrB,CAAC,EACD;QACIF,KAAK,EAAE,KAAK;QACZF,IAAI,EAAEJ,MAAM;QACZO,WAAW,EAAE,mBAAmB;QAChCC,eAAe,EAAE;MACrB,CAAC,EACD;QACIF,KAAK,EAAE,MAAM;QACbF,IAAI,EAAEJ,MAAM;QACZO,WAAW,EAAE,mBAAmB;QAChCC,eAAe,EAAE;MACrB,CAAC;IAET,CAAC;IACD,oBAAOvB,OAAA,CAACH,IAAI;MAACQ,OAAO,EAAEA,OAAQ;MAACc,IAAI,EAAEA;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjD;AAEJ;AAAC1B,EAAA,CA1Deb,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}