{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 Vue,React,Express,SQL \\u043E\\u0442 26.10.2022\\\\frontend\\\\src\\\\components\\\\ThirdColumn.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { CurrentNodeInfo } from \"../contexts/CurrentNodeInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FirstColumn() {\n  _s();\n  function get_metrics() {\n    return fetch('/api/metrics').then(r => {\n      return r.json();\n    }).catch(err => {\n      return err;\n    });\n  }\n  React.useEffect(() => {\n    // get_metrics().then((metrics) => {\n    //         let newest_metric;\n    //         for (const met of metrics) {\n    //\n    //             if (met.caption === props.node.node_name) {\n    //                 if (newest_metric === undefined) {\n    //                     newest_metric = met\n    //                 }\n    //                 else {\n    //                     if (met.datetime > newest_metric.datetime) {\n    //                         newest_metric = met\n    //                     }\n    //                 }\n    //             }\n    //         }\n    //         setMetrics(newest_metric)\n    //     }\n    // )\n  }, []);\n  const node = React.useContext(CurrentNodeInfo);\n  if (node.node_name) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: node.node_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Choose node to get statistic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(FirstColumn, \"QT9Nwwh/yg+qnM8KSaEkcyNguPg=\");\n_c = FirstColumn;\nvar _c;\n$RefreshReg$(_c, \"FirstColumn\");","map":{"version":3,"names":["React","CurrentNodeInfo","jsxDEV","_jsxDEV","FirstColumn","_s","get_metrics","fetch","then","r","json","catch","err","useEffect","node","useContext","node_name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Тестовое задание Vue,React,Express,SQL от 26.10.2022/frontend/src/components/ThirdColumn.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { CurrentNodeInfo } from \"../contexts/CurrentNodeInfo\"\r\n\r\nexport default function FirstColumn() {\r\n\r\n    function get_metrics() {\r\n        return fetch('/api/metrics')\r\n            .then(r => {\r\n                return r.json()\r\n            })\r\n            .catch(err => {\r\n                return err\r\n            })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        // get_metrics().then((metrics) => {\r\n        //         let newest_metric;\r\n        //         for (const met of metrics) {\r\n        //\r\n        //             if (met.caption === props.node.node_name) {\r\n        //                 if (newest_metric === undefined) {\r\n        //                     newest_metric = met\r\n        //                 }\r\n        //                 else {\r\n        //                     if (met.datetime > newest_metric.datetime) {\r\n        //                         newest_metric = met\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //         setMetrics(newest_metric)\r\n        //     }\r\n        // )\r\n    }, [])\r\n\r\n    const node = React.useContext(CurrentNodeInfo);\r\n    if (node.node_name) {\r\n        return (\r\n\r\n            <div className=\"column\">\r\n                <p>{node.node_name}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div>\r\n                <p>Choose node to get statistic</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAElC,SAASC,WAAWA,CAAA,EAAG;IACnB,OAAOC,KAAK,CAAC,cAAc,CAAC,CACvBC,IAAI,CAACC,CAAC,IAAI;MACP,OAAOA,CAAC,CAACC,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACV,OAAOA,GAAG;IACd,CAAC,CAAC;EACV;EAEAZ,KAAK,CAACa,SAAS,CAAC,MAAM;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH,EAAE,EAAE,CAAC;EAEN,MAAMC,IAAI,GAAGd,KAAK,CAACe,UAAU,CAACd,eAAe,CAAC;EAC9C,IAAIa,IAAI,CAACE,SAAS,EAAE;IAChB,oBAEIb,OAAA;MAAKc,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACnBf,OAAA;QAAAe,QAAA,EAAIJ,IAAI,CAACE;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAEd,CAAC,MAEI;IACD,oBACInB,OAAA;MAAAe,QAAA,eACIf,OAAA;QAAAe,QAAA,EAAG;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEd;AAEJ;AAACjB,EAAA,CAnDuBD,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}