{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 Vue,React,Express,SQL \\u043E\\u0442 26.10.2022\\\\frontend\\\\src\\\\components\\\\Node.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Node(props) {\n  function get_metrics() {\n    return fetch('/api/metrics').then(r => {\n      return r.json();\n    }).catch(err => {\n      return err;\n    });\n  }\n  function get_metrics_by_node(node_name) {\n    console.log('ok');\n    get_metrics().then(metrics => {\n      let newest_metric;\n      for (const met of metrics) {\n        if (met.caption === node_name) {\n          if (newest_metric === undefined) {\n            newest_metric = met;\n          } else {\n            if (met.datetime > newest_metric.datetime) {\n              newest_metric = met;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  //     React.useEffect(() => {\n  //\n  //         full_data.then(\n  //             res=> {\n  //                 setInf(res)\n  //\n  //             })\n  //\n  //     }, [inf]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node\",\n    onClick: () => get_metrics_by_node(props.node.node_name),\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"node__status\",\n      style: {\n        backgroundColor: `${props.node.status_color}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.node.node_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n_c = Node;\nvar _c;\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"names":["React","useSelector","jsxDEV","_jsxDEV","Node","props","get_metrics","fetch","then","r","json","catch","err","get_metrics_by_node","node_name","console","log","metrics","newest_metric","met","caption","undefined","datetime","className","onClick","node","children","style","backgroundColor","status_color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Тестовое задание Vue,React,Express,SQL от 26.10.2022/frontend/src/components/Node.js"],"sourcesContent":["import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nexport default function Node(props) {\r\n\r\n    function get_metrics() {\r\n            return fetch('/api/metrics')\r\n                .then(r => {\r\n                    return r.json()\r\n                })\r\n                .catch(err => {\r\n                    return err\r\n                })\r\n        }\r\n\r\n    function get_metrics_by_node(node_name){\r\n    console.log('ok')\r\n           get_metrics().then((metrics) => {\r\n                 let newest_metric;\r\n                 for (const met of metrics) {\r\n                    if (met.caption === node_name) {\r\n                        if (newest_metric === undefined) {\r\n                            newest_metric = met\r\n                        }\r\n                        else {\r\n                            if (met.datetime > newest_metric.datetime) {\r\n                                newest_metric = met\r\n                            }\r\n                        }\r\n                    }\r\n                 }\r\n\r\n\r\n\r\n           }\r\n        )\r\n     }\r\n\r\n//     React.useEffect(() => {\r\n//\r\n//         full_data.then(\r\n//             res=> {\r\n//                 setInf(res)\r\n//\r\n//             })\r\n//\r\n//     }, [inf]);\r\n\r\n     return (\r\n         <div className=\"node\" onClick={()=> get_metrics_by_node(props.node.node_name)}>\r\n            <p className='node__status' style={{backgroundColor:`${props.node.status_color}`}}></p>\r\n            <p >{props.node.node_name}</p>\r\n         </div>\r\n\r\n       )\r\n\r\n\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAE;EAEhC,SAASC,WAAWA,CAAA,EAAG;IACf,OAAOC,KAAK,CAAC,cAAc,CAAC,CACvBC,IAAI,CAACC,CAAC,IAAI;MACP,OAAOA,CAAC,CAACC,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACV,OAAOA,GAAG;IACd,CAAC,CAAC;EACV;EAEJ,SAASC,mBAAmBA,CAACC,SAAS,EAAC;IACvCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACVV,WAAW,CAAC,CAAC,CAACE,IAAI,CAAES,OAAO,IAAK;MAC1B,IAAIC,aAAa;MACjB,KAAK,MAAMC,GAAG,IAAIF,OAAO,EAAE;QACxB,IAAIE,GAAG,CAACC,OAAO,KAAKN,SAAS,EAAE;UAC3B,IAAII,aAAa,KAAKG,SAAS,EAAE;YAC7BH,aAAa,GAAGC,GAAG;UACvB,CAAC,MACI;YACD,IAAIA,GAAG,CAACG,QAAQ,GAAGJ,aAAa,CAACI,QAAQ,EAAE;cACvCJ,aAAa,GAAGC,GAAG;YACvB;UACJ;QACJ;MACH;IAIN,CACH,CAAC;EACJ;;EAEL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEK,oBACIhB,OAAA;IAAKoB,SAAS,EAAC,MAAM;IAACC,OAAO,EAAEA,CAAA,KAAKX,mBAAmB,CAACR,KAAK,CAACoB,IAAI,CAACX,SAAS,CAAE;IAAAY,QAAA,gBAC3EvB,OAAA;MAAGoB,SAAS,EAAC,cAAc;MAACI,KAAK,EAAE;QAACC,eAAe,EAAE,GAAEvB,KAAK,CAACoB,IAAI,CAACI,YAAa;MAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvF9B,OAAA;MAAAuB,QAAA,EAAKrB,KAAK,CAACoB,IAAI,CAACX;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAKf;AAACC,EAAA,GAtDuB9B,IAAI;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}