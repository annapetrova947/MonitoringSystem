{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 Vue,React,Express,SQL \\u043E\\u0442 26.10.2022\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport FirstColumn from \"./components/FirstColumn.jsx\";\nimport NodesList from \"./components/NodesList.jsx\";\nimport NodeStatistic from \"./components/NodeStatistic.jsx\";\nimport { AllInfo } from \"./contexts/Context.js\";\nimport { CurrentNodeInfo } from \"./contexts/Context.js\";\nimport { NodesInGroup } from \"./contexts/Context.js\";\nimport { CurrentNodeMetrics } from \"./contexts/Context.js\";\nimport { getGroups } from \"./utils/api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fullData, setFullData] = React.useState([]);\n  const [currentData, setCurrentData] = React.useState([]);\n  const [currentNode, setCurrentNode] = React.useState({});\n  const [currentMetrics, setCurrentMetrics] = React.useState();\n  let render = 0;\n  // get information from server every 1 minute\n\n  setInterval(() => {\n    render += 1;\n  }, 60000);\n  React.useEffect(() => {\n    fetch(\"/api/groups\").then(r => {\n      r.json().then(res => setFullData(res));\n    }).catch(err => {\n      return err;\n    });\n  }, [render]);\n  React.useEffect(() => {\n    setCurrentData([...fullData]);\n  }, [fullData]);\n  function get_metrics() {\n    return fetch(\"/api/metrics\").then(r => {\n      return r.json();\n    }).catch(err => {\n      return err;\n    });\n  }\n  function filterFullData(group) {\n    let arr;\n    if (group) {\n      arr = fullData.filter(node => node.group_name === group);\n    } else {\n      arr = fullData;\n    }\n    setCurrentData([...arr]);\n  }\n  function chooseNodeStat(node) {\n    setCurrentNode(node);\n    get_metrics().then(metrics => {\n      const met_arr = [];\n      for (const met of metrics) {\n        if (met.caption === node.node_name) {\n          met_arr.push(met);\n        }\n      }\n      setCurrentMetrics([...met_arr]);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AllInfo.Provider, {\n      value: fullData,\n      children: /*#__PURE__*/_jsxDEV(NodesInGroup.Provider, {\n        value: currentData,\n        children: /*#__PURE__*/_jsxDEV(CurrentNodeInfo.Provider, {\n          value: currentNode,\n          children: /*#__PURE__*/_jsxDEV(CurrentNodeMetrics.Provider, {\n            value: currentMetrics,\n            children: [/*#__PURE__*/_jsxDEV(FirstColumn, {\n              filterFullData: filterFullData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NodesList, {\n              chooseNodeStat: chooseNodeStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NodeStatistic, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y5N0w3krUIhv8QtlHJLERn2EDrk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useSelector","FirstColumn","NodesList","NodeStatistic","AllInfo","CurrentNodeInfo","NodesInGroup","CurrentNodeMetrics","getGroups","jsxDEV","_jsxDEV","App","_s","fullData","setFullData","useState","currentData","setCurrentData","currentNode","setCurrentNode","currentMetrics","setCurrentMetrics","render","setInterval","useEffect","fetch","then","r","json","res","catch","err","get_metrics","filterFullData","group","arr","filter","node","group_name","chooseNodeStat","metrics","met_arr","met","caption","node_name","push","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Тестовое задание Vue,React,Express,SQL от 26.10.2022/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport FirstColumn from \"./components/FirstColumn.jsx\";\nimport NodesList from \"./components/NodesList.jsx\";\nimport NodeStatistic from \"./components/NodeStatistic.jsx\";\nimport { AllInfo } from \"./contexts/Context.js\";\nimport { CurrentNodeInfo } from \"./contexts/Context.js\";\nimport { NodesInGroup } from \"./contexts/Context.js\";\nimport { CurrentNodeMetrics } from \"./contexts/Context.js\";\nimport { getGroups } from \"./utils/api.js\";\n\nfunction App() {\n  const [fullData, setFullData] = React.useState([]);\n  const [currentData, setCurrentData] = React.useState([]);\n  const [currentNode, setCurrentNode] = React.useState({});\n  const [currentMetrics, setCurrentMetrics] = React.useState();\n  let render = 0;\n  // get information from server every 1 minute\n\n  setInterval(() => {\n    render += 1;\n  }, 60000);\n\n  React.useEffect(() => {\n    fetch(\"/api/groups\")\n      .then((r) => {\n        r.json().then((res) => setFullData(res));\n      })\n      .catch((err) => {\n        return err;\n      });\n  }, [render]);\n\n  React.useEffect(() => {\n    setCurrentData([...fullData]);\n  }, [fullData]);\n\n  function get_metrics() {\n    return fetch(\"/api/metrics\")\n      .then((r) => {\n        return r.json();\n      })\n      .catch((err) => {\n        return err;\n      });\n  }\n\n  function filterFullData(group) {\n    let arr;\n    if (group) {\n      arr = fullData.filter((node) => node.group_name === group);\n    } else {\n      arr = fullData;\n    }\n\n    setCurrentData([...arr]);\n  }\n\n  function chooseNodeStat(node) {\n    setCurrentNode(node);\n    get_metrics().then((metrics) => {\n      const met_arr = [];\n      for (const met of metrics) {\n        if (met.caption === node.node_name) {\n          met_arr.push(met);\n        }\n      }\n      setCurrentMetrics([...met_arr]);\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <AllInfo.Provider value={fullData}>\n        <NodesInGroup.Provider value={currentData}>\n          <CurrentNodeInfo.Provider value={currentNode}>\n            <CurrentNodeMetrics.Provider value={currentMetrics}>\n              <FirstColumn filterFullData={filterFullData} />\n              <NodesList chooseNodeStat={chooseNodeStat} />\n              <NodeStatistic />\n            </CurrentNodeMetrics.Provider>\n          </CurrentNodeInfo.Provider>\n        </NodesInGroup.Provider>\n      </AllInfo.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}