{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 Vue,React,Express,SQL \\u043E\\u0442 26.10.2022\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport FirstColumn from \"./components/FirstColumn.jsx\";\nimport SecondColumn from \"./components/SecondColumn.jsx\";\nimport ThirdColumn from \"./components/ThirdColumn.jsx\";\nimport { CurrentNodeInfo } from \"./contexts/CurrentNodeInfo.js\";\nimport { CurrentNodeMetrics } from \"./contexts/CurrentNodeInfo.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fullData, setFullData] = React.useState([]);\n  const dispatch = useDispatch();\n  const [currentNode, setCurrentNode] = React.useState({});\n  const [currentMetrics, setCurrentMetrics] = React.useState();\n  React.useEffect(() => {\n    fetch('/api/groups').then(r => {\n      r.json().then(res => setFullData(res));\n    }).catch(err => {\n      return err;\n    });\n  }, []);\n  function get_metrics() {\n    return fetch('/api/metrics').then(r => {\n      return r.json();\n    }).catch(err => {\n      return err;\n    });\n  }\n  function chooseNodeStat(node) {\n    setCurrentNode(node);\n    get_metrics().then(metrics => {\n      const met_arr = [];\n      for (const met of metrics) {\n        if (met.caption === node.node_name) {\n          met_arr.push(met);\n        }\n      }\n      setCurrentMetrics([...met_arr]);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: fullData && /*#__PURE__*/_jsxDEV(CurrentNodeInfo.Provider, {\n      value: currentNode,\n      children: /*#__PURE__*/_jsxDEV(CurrentNodeMetrics.Provider, {\n        value: currentMetrics,\n        children: [console.log(fullData), /*#__PURE__*/_jsxDEV(FirstColumn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(SecondColumn, {\n          chooseNodeStat: chooseNodeStat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(ThirdColumn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zdGbaFh+Fln66/pbP+BoYSArR3s=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useDispatch","useSelector","FirstColumn","SecondColumn","ThirdColumn","CurrentNodeInfo","CurrentNodeMetrics","jsxDEV","_jsxDEV","App","_s","fullData","setFullData","useState","dispatch","currentNode","setCurrentNode","currentMetrics","setCurrentMetrics","useEffect","fetch","then","r","json","res","catch","err","get_metrics","chooseNodeStat","node","metrics","met_arr","met","caption","node_name","push","className","children","Provider","value","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Тестовое задание Vue,React,Express,SQL от 26.10.2022/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport FirstColumn from \"./components/FirstColumn.jsx\"\nimport SecondColumn from \"./components/SecondColumn.jsx\"\nimport ThirdColumn from \"./components/ThirdColumn.jsx\"\nimport { CurrentNodeInfo } from \"./contexts/CurrentNodeInfo.js\"\n\nimport { CurrentNodeMetrics } from \"./contexts/CurrentNodeInfo.js\"\n\nfunction App() {\n    const [fullData, setFullData] = React.useState([]);\n    const dispatch = useDispatch();\n\n    const [currentNode, setCurrentNode] = React.useState({});\n    const [currentMetrics, setCurrentMetrics] = React.useState();\n\n    React.useEffect(\n        () => {\n          fetch('/api/groups')\n                  .then(r => {\n                        r.json()\n                            .then(res=>setFullData(res))\n                  })\n                  .catch(err => {\n                      return err\n                  })\n        }\n    , []);\n\n    function get_metrics() {\n            return fetch('/api/metrics')\n                .then(r => {\n                    return r.json()\n                })\n                .catch(err => {\n                    return err\n                })\n     }\n\n    function chooseNodeStat(node) {\n        setCurrentNode(node)\n        get_metrics().then((metrics) => {\n              const met_arr = []\n              for (const met of metrics) {\n                  if (met.caption === node.node_name) {\n                                met_arr.push(met)\n                            }\n                        }\n                        setCurrentMetrics([...met_arr]);\n\n                    }\n                )\n    }\n\n\n  return (\n    <div className=\"App\">\n        {fullData &&\n             <CurrentNodeInfo.Provider value={currentNode}>\n                           <CurrentNodeMetrics.Provider value={currentMetrics}>\n                               {console.log(fullData)}\n                                 <FirstColumn />\n                                 <SecondColumn chooseNodeStat={chooseNodeStat}/>\n                                 <ThirdColumn />\n                             </CurrentNodeMetrics.Provider>\n                         </CurrentNodeInfo.Provider>\n            \n\n        }\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}