{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 Vue,React,Express,SQL \\u043E\\u0442 26.10.2022\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport FirstColumn from \"./components/FirstColumn.jsx\";\nimport SecondColumn from \"./components/SecondColumn.jsx\";\nimport ThirdColumn from \"./components/ThirdColumn.jsx\";\nimport { AllInfo } from \"./contexts/CurrentNodeInfo.js\";\nimport { CurrentNodeInfo } from \"./contexts/CurrentNodeInfo.js\";\nimport { NodesInGroup } from \"./contexts/CurrentNodeInfo.js\";\nimport { CurrentNodeMetrics } from \"./contexts/CurrentNodeInfo.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fullData, setFullData] = React.useState([]);\n  const [currentData, setCurrentData] = React.useState([]);\n  const [currentNode, setCurrentNode] = React.useState({});\n  const [currentMetrics, setCurrentMetrics] = React.useState();\n  const [shouldUpdate, setShouldUpdate] = React.useState(false);\n  setInterval(() => {\n    console.log('1');\n    setShouldUpdate(true);\n    setShouldUpdate(false);\n  }, 10000);\n  React.useEffect(() => {\n    fetch('/api/groups').then(r => {\n      r.json().then(res => setFullData(res));\n    }).catch(err => {\n      return err;\n    });\n  }, []);\n  React.useEffect(() => {\n    setCurrentData([...fullData]);\n  }, [fullData]);\n  function get_metrics() {\n    return fetch('/api/metrics').then(r => {\n      return r.json();\n    }).catch(err => {\n      return err;\n    });\n  }\n  function filterFullData(group) {\n    let arr;\n    if (group) {\n      arr = fullData.filter(node => node.group_name === group);\n    } else {\n      arr = fullData;\n    }\n    setCurrentData([...arr]);\n  }\n  function chooseNodeStat(node) {\n    setCurrentNode(node);\n    get_metrics().then(metrics => {\n      const met_arr = [];\n      for (const met of metrics) {\n        if (met.caption === node.node_name) {\n          met_arr.push(met);\n        }\n      }\n      setCurrentMetrics([...met_arr]);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AllInfo.Provider, {\n      value: fullData,\n      children: /*#__PURE__*/_jsxDEV(NodesInGroup.Provider, {\n        value: currentData,\n        children: /*#__PURE__*/_jsxDEV(CurrentNodeInfo.Provider, {\n          value: currentNode,\n          children: /*#__PURE__*/_jsxDEV(CurrentNodeMetrics.Provider, {\n            value: currentMetrics,\n            children: [/*#__PURE__*/_jsxDEV(FirstColumn, {\n              filterFullData: filterFullData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(SecondColumn, {\n              chooseNodeStat: chooseNodeStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(ThirdColumn, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kD5K+w1wDvQAt6d40PbRbdeF/SA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useSelector","FirstColumn","SecondColumn","ThirdColumn","AllInfo","CurrentNodeInfo","NodesInGroup","CurrentNodeMetrics","jsxDEV","_jsxDEV","App","_s","fullData","setFullData","useState","currentData","setCurrentData","currentNode","setCurrentNode","currentMetrics","setCurrentMetrics","shouldUpdate","setShouldUpdate","setInterval","console","log","useEffect","fetch","then","r","json","res","catch","err","get_metrics","filterFullData","group","arr","filter","node","group_name","chooseNodeStat","metrics","met_arr","met","caption","node_name","push","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Тестовое задание Vue,React,Express,SQL от 26.10.2022/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport FirstColumn from \"./components/FirstColumn.jsx\"\nimport SecondColumn from \"./components/SecondColumn.jsx\"\nimport ThirdColumn from \"./components/ThirdColumn.jsx\"\nimport { AllInfo } from \"./contexts/CurrentNodeInfo.js\";\nimport { CurrentNodeInfo } from \"./contexts/CurrentNodeInfo.js\"\nimport { NodesInGroup } from \"./contexts/CurrentNodeInfo.js\";\nimport { CurrentNodeMetrics } from \"./contexts/CurrentNodeInfo.js\"\n\nfunction App() {\n    const [fullData, setFullData] = React.useState([]);\n    const [currentData, setCurrentData] = React.useState([]);\n    const [currentNode, setCurrentNode] = React.useState({});\n    const [currentMetrics, setCurrentMetrics] = React.useState();\n    const [shouldUpdate, setShouldUpdate] = React.useState(false);\n\n    setInterval(() => {\n        console.log('1')\n        setShouldUpdate(true);\n        setShouldUpdate(false);\n\n    }, 10000);\n\n    React.useEffect(\n        () => {\n          fetch('/api/groups')\n                  .then(r => {\n                        r.json()\n                            .then(res=>setFullData(res))\n                  })\n                  .catch(err => {\n                      return err\n                  })\n        }\n    , []);\n\n    React.useEffect(\n            () => {\n              setCurrentData([...fullData]);\n            }\n        , [fullData]);\n\n    function get_metrics() {\n            return fetch('/api/metrics')\n                .then(r => {\n                    return r.json()\n                })\n                .catch(err => {\n                    return err\n                })\n     }\n\n    function filterFullData(group) {\n        let arr\n            if (group) {\n                 arr = fullData.filter(((node) => node.group_name === group))\n            }\n            else {\n                 arr = fullData;\n            }\n\n            setCurrentData([...arr])\n\n    }\n\n    function chooseNodeStat(node) {\n        setCurrentNode(node)\n        get_metrics().then((metrics) => {\n              const met_arr = []\n              for (const met of metrics) {\n                  if (met.caption === node.node_name) {\n                                met_arr.push(met)\n                            }\n                        }\n                        setCurrentMetrics([...met_arr]);\n\n                    }\n                )\n    }\n\n\n  return (\n    <div className=\"App\">\n        <AllInfo.Provider value={fullData}>\n            <NodesInGroup.Provider value={currentData}>\n                <CurrentNodeInfo.Provider value={currentNode}>\n                          <CurrentNodeMetrics.Provider value={currentMetrics}>\n                                 <FirstColumn filterFullData={filterFullData}/>\n                                 <SecondColumn chooseNodeStat={chooseNodeStat}/>\n                                 <ThirdColumn />\n                             </CurrentNodeMetrics.Provider>\n                         </CurrentNodeInfo.Provider>\n             </NodesInGroup.Provider>\n        </AllInfo.Provider>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,SAASC,OAAO,QAAQ,+BAA+B;AACvD,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,YAAY,QAAQ,+BAA+B;AAC5D,SAASC,kBAAkB,QAAQ,+BAA+B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGnB,KAAK,CAACe,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACK,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,KAAK,CAACe,QAAQ,CAAC,CAAC;EAC5D,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGvB,KAAK,CAACe,QAAQ,CAAC,KAAK,CAAC;EAE7DS,WAAW,CAAC,MAAM;IACdC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChBH,eAAe,CAAC,IAAI,CAAC;IACrBA,eAAe,CAAC,KAAK,CAAC;EAE1B,CAAC,EAAE,KAAK,CAAC;EAETvB,KAAK,CAAC2B,SAAS,CACX,MAAM;IACJC,KAAK,CAAC,aAAa,CAAC,CACXC,IAAI,CAACC,CAAC,IAAI;MACLA,CAAC,CAACC,IAAI,CAAC,CAAC,CACHF,IAAI,CAACG,GAAG,IAAElB,WAAW,CAACkB,GAAG,CAAC,CAAC;IACtC,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACV,OAAOA,GAAG;IACd,CAAC,CAAC;EACZ,CAAC,EACH,EAAE,CAAC;EAELlC,KAAK,CAAC2B,SAAS,CACP,MAAM;IACJV,cAAc,CAAC,CAAC,GAAGJ,QAAQ,CAAC,CAAC;EAC/B,CAAC,EACH,CAACA,QAAQ,CAAC,CAAC;EAEjB,SAASsB,WAAWA,CAAA,EAAG;IACf,OAAOP,KAAK,CAAC,cAAc,CAAC,CACvBC,IAAI,CAACC,CAAC,IAAI;MACP,OAAOA,CAAC,CAACC,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,IAAI;MACV,OAAOA,GAAG;IACd,CAAC,CAAC;EACb;EAED,SAASE,cAAcA,CAACC,KAAK,EAAE;IAC3B,IAAIC,GAAG;IACH,IAAID,KAAK,EAAE;MACNC,GAAG,GAAGzB,QAAQ,CAAC0B,MAAM,CAAGC,IAAI,IAAKA,IAAI,CAACC,UAAU,KAAKJ,KAAM,CAAC;IACjE,CAAC,MACI;MACAC,GAAG,GAAGzB,QAAQ;IACnB;IAEAI,cAAc,CAAC,CAAC,GAAGqB,GAAG,CAAC,CAAC;EAEhC;EAEA,SAASI,cAAcA,CAACF,IAAI,EAAE;IAC1BrB,cAAc,CAACqB,IAAI,CAAC;IACpBL,WAAW,CAAC,CAAC,CAACN,IAAI,CAAEc,OAAO,IAAK;MAC1B,MAAMC,OAAO,GAAG,EAAE;MAClB,KAAK,MAAMC,GAAG,IAAIF,OAAO,EAAE;QACvB,IAAIE,GAAG,CAACC,OAAO,KAAKN,IAAI,CAACO,SAAS,EAAE;UACtBH,OAAO,CAACI,IAAI,CAACH,GAAG,CAAC;QACrB;MACJ;MACAxB,iBAAiB,CAAC,CAAC,GAAGuB,OAAO,CAAC,CAAC;IAEnC,CACJ,CAAC;EACb;EAGF,oBACElC,OAAA;IAAKuC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBxC,OAAA,CAACL,OAAO,CAAC8C,QAAQ;MAACC,KAAK,EAAEvC,QAAS;MAAAqC,QAAA,eAC9BxC,OAAA,CAACH,YAAY,CAAC4C,QAAQ;QAACC,KAAK,EAAEpC,WAAY;QAAAkC,QAAA,eACtCxC,OAAA,CAACJ,eAAe,CAAC6C,QAAQ;UAACC,KAAK,EAAElC,WAAY;UAAAgC,QAAA,eACnCxC,OAAA,CAACF,kBAAkB,CAAC2C,QAAQ;YAACC,KAAK,EAAEhC,cAAe;YAAA8B,QAAA,gBAC5CxC,OAAA,CAACR,WAAW;cAACkC,cAAc,EAAEA;YAAe;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,eAC9C9C,OAAA,CAACP,YAAY;cAACuC,cAAc,EAAEA;YAAe;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,eAC/C9C,OAAA,CAACN,WAAW;cAAAiD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACU;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGlB,CAAC;AAEV;AAAC5C,EAAA,CAzFQD,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AA2FZ,eAAeA,GAAG;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}