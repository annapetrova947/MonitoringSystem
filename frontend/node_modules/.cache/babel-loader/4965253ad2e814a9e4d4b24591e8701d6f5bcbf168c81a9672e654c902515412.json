{"ast":null,"code":"import * as actions from './actionTypes';\nlet lastId = 0;\nfunction get_group_data() {\n  return fetch('/api/groups').then(r => {\n    return r;\n  }).catch(err => {\n    return err;\n  });\n}\nfunction get_metrics_data() {\n  return fetch('/api/groups').then(r => {\n    return r;\n  }).catch(err => {\n    return err;\n  });\n}\nexport default function reducer(state = get_full_data().then(res => {\n  //console.log(res.json())\n  return res.json().then(res => {\n    return res;\n  });\n}), action) {\n  switch (action.type) {\n    case actions.CHOOSE_GROUP:\n      return state.then(res => {\n        return [...res, {\n          name: \"anna\"\n        }];\n      });\n    //        return state.then( res => {\n    //        console.log('old', res)\n    //        res.filter(gr => \"Москва\" === gr['group_name'])\n    //        console.log('new', res)\n    //        let ans = []\n    //        for (const node of res) {\n    //         console.log(node, action.payload.group)\n    //             if (node['group_name'] === action.payload.group)\n    //             {ans.push(node)}\n    //        }\n    //        console.log('new', ans )\n    //        return ans\n    //});\n    case actions.TASK_ADD:\n      return [...state, {\n        id: ++lastId,\n        title: action.payload.title,\n        completed: false\n      }];\n    case actions.TASK_TOGGLE:\n      return state.map(task => {\n        if (task.id === action.payload.id) return {\n          ...task,\n          completed: !task.completed\n        };\n        return task;\n      });\n    case actions.TASK_REMOVE:\n      return state.filter(task => action.payload.id !== task.id);\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["actions","lastId","get_group_data","fetch","then","r","catch","err","get_metrics_data","reducer","state","get_full_data","res","json","action","type","CHOOSE_GROUP","name","TASK_ADD","id","title","payload","completed","TASK_TOGGLE","map","task","TASK_REMOVE","filter"],"sources":["C:/Users/User/Desktop/Тестовое задание Vue,React,Express,SQL от 26.10.2022/frontend/src/store/reducer.js"],"sourcesContent":["import * as actions from './actionTypes';\r\n\r\nlet lastId = 0;\r\n\r\nfunction get_group_data(){\r\n    return fetch('/api/groups')\r\n        .then(r => {\r\n            return r\r\n        })\r\n        .catch(err => {\r\n            return err\r\n        })\r\n}\r\n\r\nfunction get_metrics_data(){\r\n    return fetch('/api/groups')\r\n        .then(r => {\r\n            return r\r\n        })\r\n        .catch(err => {\r\n            return err\r\n        })\r\n}\r\n\r\n\r\nexport default function reducer(state = get_full_data().then(res => {\r\n    //console.log(res.json())\r\n    return res.json().then(res=> {return res})\r\n}), action) {\r\n  switch (action.type) {\r\n    case actions.CHOOSE_GROUP:\r\n          return state.then(res => {\r\n            return [...res, {name: \"anna\"}]\r\n          })\r\n//        return state.then( res => {\r\n//        console.log('old', res)\r\n//        res.filter(gr => \"Москва\" === gr['group_name'])\r\n//        console.log('new', res)\r\n//        let ans = []\r\n//        for (const node of res) {\r\n//         console.log(node, action.payload.group)\r\n//             if (node['group_name'] === action.payload.group)\r\n//             {ans.push(node)}\r\n//        }\r\n//        console.log('new', ans )\r\n//        return ans\r\n       //});\r\n    case actions.TASK_ADD:\r\n      return [...state, {\r\n        id: ++lastId,\r\n        title: action.payload.title,\r\n        completed: false,\r\n      }];\r\n\r\n    case actions.TASK_TOGGLE:\r\n      return state.map(task => {\r\n        if (task.id === action.payload.id)\r\n          return { ...task, completed: !task.completed }\r\n        return task;\r\n      });\r\n\r\n    case actions.TASK_REMOVE:\r\n      return state.filter(task => action.payload.id !== task.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,eAAe;AAExC,IAAIC,MAAM,GAAG,CAAC;AAEd,SAASC,cAAcA,CAAA,EAAE;EACrB,OAAOC,KAAK,CAAC,aAAa,CAAC,CACtBC,IAAI,CAACC,CAAC,IAAI;IACP,OAAOA,CAAC;EACZ,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;IACV,OAAOA,GAAG;EACd,CAAC,CAAC;AACV;AAEA,SAASC,gBAAgBA,CAAA,EAAE;EACvB,OAAOL,KAAK,CAAC,aAAa,CAAC,CACtBC,IAAI,CAACC,CAAC,IAAI;IACP,OAAOA,CAAC;EACZ,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;IACV,OAAOA,GAAG;EACd,CAAC,CAAC;AACV;AAGA,eAAe,SAASE,OAAOA,CAACC,KAAK,GAAGC,aAAa,CAAC,CAAC,CAACP,IAAI,CAACQ,GAAG,IAAI;EAChE;EACA,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC,CAACT,IAAI,CAACQ,GAAG,IAAG;IAAC,OAAOA,GAAG;EAAA,CAAC,CAAC;AAC9C,CAAC,CAAC,EAAEE,MAAM,EAAE;EACV,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKf,OAAO,CAACgB,YAAY;MACnB,OAAON,KAAK,CAACN,IAAI,CAACQ,GAAG,IAAI;QACvB,OAAO,CAAC,GAAGA,GAAG,EAAE;UAACK,IAAI,EAAE;QAAM,CAAC,CAAC;MACjC,CAAC,CAAC;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO;IACH,KAAKjB,OAAO,CAACkB,QAAQ;MACnB,OAAO,CAAC,GAAGR,KAAK,EAAE;QAChBS,EAAE,EAAE,EAAElB,MAAM;QACZmB,KAAK,EAAEN,MAAM,CAACO,OAAO,CAACD,KAAK;QAC3BE,SAAS,EAAE;MACb,CAAC,CAAC;IAEJ,KAAKtB,OAAO,CAACuB,WAAW;MACtB,OAAOb,KAAK,CAACc,GAAG,CAACC,IAAI,IAAI;QACvB,IAAIA,IAAI,CAACN,EAAE,KAAKL,MAAM,CAACO,OAAO,CAACF,EAAE,EAC/B,OAAO;UAAE,GAAGM,IAAI;UAAEH,SAAS,EAAE,CAACG,IAAI,CAACH;QAAU,CAAC;QAChD,OAAOG,IAAI;MACb,CAAC,CAAC;IAEJ,KAAKzB,OAAO,CAAC0B,WAAW;MACtB,OAAOhB,KAAK,CAACiB,MAAM,CAACF,IAAI,IAAIX,MAAM,CAACO,OAAO,CAACF,EAAE,KAAKM,IAAI,CAACN,EAAE,CAAC;IAE5D;MACE,OAAOT,KAAK;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}