{"ast":null,"code":"import * as actions from './actionTypes';\nlet lastId = 0;\nfunction get_full_data() {\n  fetch('/api/groups').then(response => response.json().then(data => ({\n    data: data\n  })));\n}\nexport default function reducer(state = get_full_data().then(res => {\n  console.log(res.data);\n  return res.data;\n}), action) {\n  switch (action.type) {\n    case actions.TASK_ADD:\n      return [...state, {\n        id: ++lastId,\n        title: action.payload.title,\n        completed: false\n      }];\n    case actions.TASK_TOGGLE:\n      return state.map(task => {\n        if (task.id === action.payload.id) return {\n          ...task,\n          completed: !task.completed\n        };\n        return task;\n      });\n    case actions.TASK_REMOVE:\n      return state.filter(task => action.payload.id !== task.id);\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["actions","lastId","get_full_data","fetch","then","response","json","data","reducer","state","res","console","log","action","type","TASK_ADD","id","title","payload","completed","TASK_TOGGLE","map","task","TASK_REMOVE","filter"],"sources":["C:/Users/User/Desktop/Тестовое задание Vue,React,Express,SQL от 26.10.2022/frontend/src/store/reducer.js"],"sourcesContent":["import * as actions from './actionTypes';\r\n\r\nlet lastId = 0;\r\nfunction get_full_data(){\r\n    fetch('/api/groups').then(response =>\r\n        response.json().then(data => ({\r\n            data: data\r\n\r\n        })\r\n    ));\r\n}\r\n\r\n\r\n\r\n\r\nexport default function reducer(state = get_full_data().then(res => {\r\n    console.log(res.data)\r\n    return res.data\r\n}), action) {\r\n  switch (action.type) {\r\n    case actions.TASK_ADD:\r\n      return [...state, {\r\n        id: ++lastId,\r\n        title: action.payload.title,\r\n        completed: false,\r\n      }];\r\n\r\n    case actions.TASK_TOGGLE:\r\n      return state.map(task => {\r\n        if (task.id === action.payload.id)\r\n          return { ...task, completed: !task.completed }\r\n        return task;\r\n      });\r\n\r\n    case actions.TASK_REMOVE:\r\n      return state.filter(task => action.payload.id !== task.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,eAAe;AAExC,IAAIC,MAAM,GAAG,CAAC;AACd,SAASC,aAAaA,CAAA,EAAE;EACpBC,KAAK,CAAC,aAAa,CAAC,CAACC,IAAI,CAACC,QAAQ,IAC9BA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACG,IAAI,KAAK;IAC1BA,IAAI,EAAEA;EAEV,CAAC,CACL,CAAC,CAAC;AACN;AAKA,eAAe,SAASC,OAAOA,CAACC,KAAK,GAAGP,aAAa,CAAC,CAAC,CAACE,IAAI,CAACM,GAAG,IAAI;EAChEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACH,IAAI,CAAC;EACrB,OAAOG,GAAG,CAACH,IAAI;AACnB,CAAC,CAAC,EAAEM,MAAM,EAAE;EACV,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKd,OAAO,CAACe,QAAQ;MACnB,OAAO,CAAC,GAAGN,KAAK,EAAE;QAChBO,EAAE,EAAE,EAAEf,MAAM;QACZgB,KAAK,EAAEJ,MAAM,CAACK,OAAO,CAACD,KAAK;QAC3BE,SAAS,EAAE;MACb,CAAC,CAAC;IAEJ,KAAKnB,OAAO,CAACoB,WAAW;MACtB,OAAOX,KAAK,CAACY,GAAG,CAACC,IAAI,IAAI;QACvB,IAAIA,IAAI,CAACN,EAAE,KAAKH,MAAM,CAACK,OAAO,CAACF,EAAE,EAC/B,OAAO;UAAE,GAAGM,IAAI;UAAEH,SAAS,EAAE,CAACG,IAAI,CAACH;QAAU,CAAC;QAChD,OAAOG,IAAI;MACb,CAAC,CAAC;IAEJ,KAAKtB,OAAO,CAACuB,WAAW;MACtB,OAAOd,KAAK,CAACe,MAAM,CAACF,IAAI,IAAIT,MAAM,CAACK,OAAO,CAACF,EAAE,KAAKM,IAAI,CAACN,EAAE,CAAC;IAE5D;MACE,OAAOP,KAAK;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}