{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 Vue,React,Express,SQL \\u043E\\u0442 26.10.2022\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport FirstColumn from \"./components/FirstColumn.jsx\";\nimport SecondColumn from \"./components/SecondColumn.jsx\";\nimport ThirdColumn from \"./components/ThirdColumn.jsx\";\nimport { CurrentNodeInfo } from \"./contexts/CurrentNodeInfo.js\";\nimport { CurrentNodeMetrics } from \"./contexts/CurrentNodeInfo.js\";\nimport { getAllInfo } from \"./store/actions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const full_data = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [currentNode, setCurrentNode] = React.useState({});\n  const [currentMetrics, setCurrentMetrics] = React.useState();\n  React.useEffect(() => {\n    dispatch(getAllInfo());\n    console.log('full_data', full_data);\n  }, []);\n  function get_metrics() {\n    return fetch('/api/metrics').then(r => {\n      return r.json();\n    }).catch(err => {\n      return err;\n    });\n  }\n  function chooseNodeStat(node) {\n    setCurrentNode(node);\n    get_metrics().then(metrics => {\n      const met_arr = [];\n      for (const met of metrics) {\n        if (met.caption === node.node_name) {\n          met_arr.push(met);\n        }\n      }\n      setCurrentMetrics([...met_arr]);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CurrentNodeInfo.Provider, {\n      value: currentNode,\n      children: /*#__PURE__*/_jsxDEV(CurrentNodeMetrics.Provider, {\n        value: currentMetrics,\n        children: [/*#__PURE__*/_jsxDEV(FirstColumn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SecondColumn, {\n          chooseNodeStat: chooseNodeStat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ThirdColumn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5UNE93/bKo/OslgUJoT+P9r2TUg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useDispatch","useSelector","FirstColumn","SecondColumn","ThirdColumn","CurrentNodeInfo","CurrentNodeMetrics","getAllInfo","jsxDEV","_jsxDEV","App","_s","full_data","state","dispatch","currentNode","setCurrentNode","useState","currentMetrics","setCurrentMetrics","useEffect","console","log","get_metrics","fetch","then","r","json","catch","err","chooseNodeStat","node","metrics","met_arr","met","caption","node_name","push","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Тестовое задание Vue,React,Express,SQL от 26.10.2022/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport FirstColumn from \"./components/FirstColumn.jsx\"\nimport SecondColumn from \"./components/SecondColumn.jsx\"\nimport ThirdColumn from \"./components/ThirdColumn.jsx\"\nimport { CurrentNodeInfo } from \"./contexts/CurrentNodeInfo.js\"\n\nimport { CurrentNodeMetrics } from \"./contexts/CurrentNodeInfo.js\"\nimport { getAllInfo } from \"./store/actions.js\"\n\nfunction App() {\n    const full_data = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    const [currentNode, setCurrentNode] = React.useState({});\n    const [currentMetrics, setCurrentMetrics] = React.useState();\n\n    React.useEffect(() => {\n            dispatch(getAllInfo());\n            console.log('full_data', full_data)\n        }, []);\n\n    function get_metrics() {\n            return fetch('/api/metrics')\n                .then(r => {\n                    return r.json()\n                })\n                .catch(err => {\n                    return err\n                })\n     }\n\n    function chooseNodeStat(node) {\n\n        setCurrentNode(node)\n        get_metrics().then((metrics) => {\n                        const met_arr = []\n                        for (const met of metrics) {\n\n                            if (met.caption === node.node_name) {\n                                met_arr.push(met)\n                            }\n                        }\n                        setCurrentMetrics([...met_arr]);\n\n                    }\n                )\n    }\n\n\n  return (\n    <div className=\"App\">\n      <CurrentNodeInfo.Provider value={currentNode}>\n        <CurrentNodeMetrics.Provider value={currentMetrics}>\n              <FirstColumn />\n              <SecondColumn chooseNodeStat={chooseNodeStat}/>\n              <ThirdColumn />\n          </CurrentNodeMetrics.Provider>\n      </CurrentNodeInfo.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}